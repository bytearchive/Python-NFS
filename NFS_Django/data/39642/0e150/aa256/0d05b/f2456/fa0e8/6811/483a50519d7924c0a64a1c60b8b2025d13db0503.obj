import unittest
import requests
import json
import Login

class TestLogin(unittest.TestCase):
    global session
    
    def test_incorrect_password_fail(self):
        session.logged_in = False
        response = self.prepare_dataload_and_send_request("kriyazhao","yygjk")
        self.assertEqual(response.r, 0)

    def test_incorrect_username_fail(self):
        session.logged_in = False
        response = self.prepare_dataload_and_send_request("kriya","12345")
        self.assertEqual(response.r, 0)

    def test_already_login_fail(self):
        session.logged_in = True
        session.username = "kriyazhao"
        response = self.prepare_dataload_and_send_request("kriya","yygjk")
        session.logged_in = False
        session.kill()
        self.assertEqual(response.r, 2)

    def test_already_login_fail_return_username(self):
        session.logged_in = True
        session.username = "kriyazhao"
        response = self.prepare_dataload_and_send_request("kriya","yygjk")
        session.logged_in = False
        session.kill()
        self.assertEqual(response.username, "kriyazhao")

    def test_login_success(self):
        session.logged_in = True
        session.username = "kriyazhao"
        response = self.prepare_dataload_and_send_request("kriyazhao","12345")
        session.logged_in = False
        session.kill()
        self.assertEqual(response.r, 1)
    
    def test_login_success_return_username(self):
        session.logged_in = True
        session.username = "kriyazhao"
        response = self.prepare_dataload_and_send_request("kriyazhao","12345")
        session.logged_in = False
        session.kill()
        self.assertEqual(response.username, "kriyazhao")

    def prepare_dataload_and_send_request(self,un,pw):
        hashPwd = hashlib.md5(pw).hexdigest()
        dataload = json.dumps({"un": un, "pw": hashPwd})
        return requests.post("/login", dataload)

if __name__ == "__main__":
    unitest.main()